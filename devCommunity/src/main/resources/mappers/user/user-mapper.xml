<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	
	<select id="selectUserInfoAsLogin" parameterType="user" resultType="user">
	<![CDATA[
		SELECT u.user_idx,
			user_stat_cd,
			(SELECT conf_name FROM dec_conf WHERE CONF_TYPE = 'USER_STAT' AND user_stat_cd = conf_type_cd) as user_stat_nm,
			login_id,
			nick_name,
			password,
			user_role_cd,
			reg_date,
			login_date,
			pwd_date,
			access_ip,
			tryed,
			profile_src,
			second_mail,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd IN ('A', 'CB')) as user_comm_idxs,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd = 'R') as user_comm_req_idxs,
			login_flag
		FROM dec_user u
		WHERE login_id = #{login_id}
	]]>
	</select>
	
	<select id="selectUserInfoAsIdx" parameterType="_int" resultType="user">
	<![CDATA[
		SELECT user_idx,
			user_stat_cd,
			(SELECT conf_name FROM dec_conf WHERE CONF_TYPE = 'USER_STAT' AND user_stat_cd = conf_type_cd) as user_stat_nm,
			login_id,
			nick_name,
			password,
			user_role_cd,
			reg_date,
			login_date,
			pwd_date,
			access_ip,
			tryed,
			profile_src,
			second_mail,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd IN ('A', 'CB')) as user_comm_idxs,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd = 'R') as user_comm_req_idxs,
			login_flag
		FROM dec_user u
		WHERE user_idx = #{user_idx}
	]]>
	</select>
	
	<update id="updateUserInfo" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET password = #{password}
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<insert id="insertUser" parameterType="user">
	<![CDATA[
		INSERT INTO dec_user(user_stat_cd, login_id, nick_name, password, user_role_cd, reg_date, profile_src, second_mail)
		VALUES(#{user_stat_cd}, #{login_id}, #{nick_name}, #{password}, #{user_role_cd}, NOW(), ]]>
		<if test='profile_src == ""'><![CDATA[NULL]]></if>
		<if test='profile_src != ""'><![CDATA[#{profile_src}]]></if><![CDATA[, #{second_mail}
		)
	]]>
	</insert>
	
	<update id="updateUserLogin" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET access_ip = #{access_ip}, login_date = NOW(), tryed = #{tryed}, login_flag = #{login_flag}
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<update id="updateUserLoginTry" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET tryed = #{tryed}
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<update id="updateUserProfile" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET nick_name = #{nick_name}, password = #{password}, profile_src = #{profile_src}, second_mail = #{second_mail}
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<select id="getUserProfileSrc" parameterType="_int" resultType="java.lang.String">
	<![CDATA[
		SELECT profile_src
		FROM dec_user
		WHERE user_idx = #{user_idx}
	]]>
	</select>
	
	<select id="getUserPassword" parameterType="_int" resultType="java.lang.String">
	<![CDATA[
		SELECT password
		FROM dec_user
		WHERE user_idx = #{user_idx}
	]]>
	</select>
	
	<select id="selectAdminEmail" resultType="java.lang.String">
	<![CDATA[
		SELECT GROUP_CONCAT(login_id)
		FROM dec_user
		WHERE user_role_cd = 99
		AND user_stat_cd = 'A'
	]]>
	</select>
	
	<select id="userNickDupleCheck" parameterType="java.lang.String" resultType="java.lang.String">
	<![CDATA[
		SELECT nick_name
		FROM dec_user
		WHERE nick_name = #{nickName}
	]]>
	</select>
	
	<select id="getLoginIdAsIdx" parameterType="_int" resultType="java.lang.String">
	<![CDATA[
		SELECT login_id
		FROM dec_user
		WHERE user_idx = #{manager_idx}
	]]>
	</select>
	
	<select id="selectBlackListUser" resultType="user">
	<![CDATA[
		SELECT u.user_idx,
			u.user_stat_cd,
			(SELECT conf_name FROM dec_conf WHERE conf_type = 'USER_STAT' AND conf_type_cd = user_stat_cd) as user_stat_nm,
			u.login_id,
			u.nick_name,
			u.user_role_cd,
			u.reg_date,
			u.login_date,
			u.access_ip,
			u.profile_src,
			b.start_date as black_sdate,
			b.end_date as black_edate
		FROM dec_blacklist b, dec_user u
		WHERE b.user_idx = u.user_idx
	]]>
	</select>
	
	<select id="selectAllUserList" resultType="user">
	<![CDATA[
		SELECT user_idx,
			user_stat_cd,
			(SELECT conf_name FROM dec_conf WHERE conf_type = 'USER_STAT' AND conf_type_cd = user_stat_cd) as user_stat_nm,
			login_id,
			nick_name,
			user_role_cd,
			reg_date,
			login_date,
			access_ip,
			pwd_date,
			profile_src,
			second_mail,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd IN ('A', 'CB')) as user_comm_idxs,
			(SELECT GROUP_CONCAT(comm_idx) FROM dec_community_user cu WHERE u.user_idx = cu.user_idx AND cu.comm_user_stat_cd = 'R') as user_comm_req_idxs,
			login_flag
		FROM dec_user u
		WHERE user_role_cd <> 99
	]]>
	</select>
	
	<select id="selectConfAsBlackListScope" resultType="conf">
	<![CDATA[
		SELECT conf_type,
			conf_type_cd,
			conf_name,
			conf_etc
		FROM dec_conf
		WHERE conf_type = 'BLACK_SCOP'
		AND conf_type_cd <> '0000000000000000'
		ORDER BY conf_type_cd ASC
	]]>
	</select>
	
	<update id="updateUserEscapeAsIdx" parameterType="_int">
	<![CDATA[
		UPDATE dec_user
		SET user_stat_cd = 'I'
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<insert id="insertBlackListUser" parameterType="blackList">
		<selectKey keyProperty="bl_idx" order="AFTER" resultType="_int">
			<![CDATA[
				SELECT LAST_INSERT_ID()
			]]>
		</selectKey>
	<![CDATA[
		INSERT INTO dec_blacklist(user_idx, bl_cont, bl_scope, start_date, end_date)
		VALUES(#{user_idx}, #{bl_cont}, #{bl_scope}, NOW(), #{end_date})
	]]>
	</insert>
	
	<select id="selectOneBlackListForLog" parameterType="blackList" resultType="blackList">
	<![CDATA[
		SELECT bl_idx,
			user_idx,
			bl_cont,
			start_date,
			end_date
		FROM dec_blacklist
		WHERE bl_idx = #{bl_idx}
	]]>
	</select>
	
	<update id="updateUserBlackListStatus" parameterType="_int">
	<![CDATA[
		UPDATE dec_user
		SET user_stat_cd = 'B'
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<insert id="insertBlackListUserLog" parameterType="blackList">
	<![CDATA[
		INSERT INTO dec_blacklist_log(bl_flag, bl_idx, user_idx, bl_cont, bl_scope, start_date, end_date, release_date)
		VALUES('S', #{bl_idx}, #{user_idx}, #{bl_cont}, #{bl_scope}, #{start_date}, #{end_date}, NULL)
	]]>
	</insert>
	
	<select id="selectOneUserBlackListInfo" parameterType="_int" resultType="blackList">
	<![CDATA[   
		SELECT bl_idx,
			user_idx,
			bl_cont,
			start_date,
			end_date
		FROM dec_blacklist
		WHERE user_idx = #{user_idx}
	]]>
	</select>
	
	<delete id="deleteUserBlackList" parameterType="blackList">
	<![CDATA[
		DELETE FROM dec_blacklist
		WHERE bl_idx = #{bl_idx}
	]]>
	</delete>
	
	<update id="updateUserBlackListLogRelease" parameterType="blackList">
	<![CDATA[
		UPDATE dec_blacklist_log
		SET release_date = NOW()
		WHERE bl_idx = #{bl_idx}
		AND user_idx = #{user_idx}
		AND bl_flag = 'S'
	]]>
	</update>
	
	<update id="updateUserBlackListReleaseStatus" parameterType="_int">
	<![CDATA[
		UPDATE dec_user
		SET user_stat_cd = 'A'
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<select id="findLoginIdAsSecondMail" parameterType="java.lang.String" resultType="java.lang.String">
	<![CDATA[
		SELECT GROUP_CONCAT(login_id)
		FROM dec_user
		WHERE second_mail = #{value}
	]]>
	</select>
	
	<update id="changePasswdAsFineNewPasswd" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET password = #{password}, tryed = 0
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<update id="updateUserStatusAsOverTryedLogin" parameterType="user">
	<![CDATA[
		UPDATE dec_user
		SET user_stat_cd = #{user_stat_cd}
		WHERE user_idx = #{user_idx}
	]]>
	</update>
	
	<select id="selectCommunityMemberManage" parameterType="_int" resultType="user">
	<![CDATA[
		SELECT cu.user_idx,
			(SELECT user_stat_cd FROM dec_user u WHERE u.user_idx = cu.user_idx) as user_stat_cd,
			(SELECT conf_name FROM dec_conf WHERE conf_type = 'USER_STAT' AND conf_type_cd = (SELECT user_stat_cd FROM dec_user u WHERE u.user_idx = cu.user_idx)) as user_stat_nm,
			(SELECT login_id FROM dec_user u WHERE u.user_idx = cu.user_idx) as login_id,
			(SELECT nick_name FROM dec_user u WHERE u.user_idx = cu.user_idx) as nick_name,
			cu.reg_date as user_comm_req_date,
			cu.login_date as user_comm_login_date,
			IFNULL((SELECT count(*) FROM dec_community_board cb WHERE cu.user_idx = cb.board_uidx), 0) as user_comm_board_count,
			(SELECT profile_src FROM dec_user u WHERE u.user_idx = cu.user_idx) as profile_src
		FROM dec_community_user cu
		WHERE cu.comm_idx = #{comm_idx}
		AND cu.comm_role_cd <> 9
		AND cu.comm_user_stat_cd = 'A'
	]]>
	</select>
	
	<select id="selectBlackListUserInfo" parameterType="user" resultType="blackList">
	<![CDATA[
		SELECT bl_idx,
			user_idx,
			bl_cont,
			bl_scope,
			DATE_FORMAT(start_date, '%y-%m-%d') as start_date,
			DATE_FORMAT(end_date, '%y-%m-%d') as end_date,
			DATE_FORMAT(DATE_ADD(end_date, INTERVAL 1 DAY), '%Y-%m-%d') as bl_release_date
		FROM dec_blacklist
		WHERE user_idx = #{user_idx}
	]]>
	</select>
	
	<update id="updateCommunityUserBlackListStatus" parameterType="java.util.HashMap">
	<![CDATA[
		UPDATE dec_community_user
		SET comm_user_stat_cd = 'CB'
		WHERE comm_idx = #{comm_idx}
		AND user_idx = #{user_idx}
	]]>
	</update>
	
	<insert id="insertCommunityBlackListUserLog" parameterType="communityBlackList">
	<![CDATA[
		INSERT INTO dec_blacklist_log(bl_flag, bl_idx, user_idx, bl_cont, bl_scope, start_date, end_date, release_date)
		VALUES('C', #{bl_idx}, #{user_idx}, #{bl_comm_cont}, #{bl_comm_scope}, #{start_date}, #{end_date}, NULL)
	]]>
	</insert>
	
	<select id="getUserCommunityStatus" parameterType="java.util.HashMap" resultType="java.lang.String">
	<![CDATA[
		SELECT comm_user_stat_cd
		FROM dec_community_user
		WHERE comm_idx = #{comm_idx}
		AND user_idx = #{user_idx}
	]]>
	</select>
	
	<select id="selectCommunityUsersLoginIdAsClosure" parameterType="_int" resultType="user">
	<![CDATA[
		SELECT cu.user_idx,
			(SELECT login_id FROM dec_user u WHERE u.user_idx = cu.user_idx) as login_id,
			(SELECT nick_name FROM dec_user u WHERE u.user_idx = cu.user_idx) as nick_name
		FROM dec_community_user cu
		WHERE cu.comm_idx = #{comm_idx}
		AND cu.comm_role_cd = 7
	]]>
	</select>
	
	<select id="selectBlackListUsersDaily" resultType="blackList">
	<![CDATA[
		SELECT t.*
		FROM (
			SELECT bl_idx,
				user_idx,
				(SELECT nick_name FROM dec_user u WHERE u.user_idx = bl.user_idx) as user_nick,
				bl_cont,
				bl_scope,
				start_date,
				end_date,
				DATE_FORMAT(DATE_ADD(end_date, INTERVAL 1 DAY), '%Y-%m-%d') as bl_release_date
			FROM dec_blacklist bl
		) t
	]]>
	</select>
	
	<select id="selectBlackListUserReleaseStatusCheck" parameterType="blackList" resultType="blackList">
	<![CDATA[
		SELECT bl_idx,
			user_idx,
			(SELECT nick_name FROM dec_user u WHERE u.user_idx = bl.user_idx) as user_nick,
			bl_cont,
			bl_scope,
			start_date,
			end_date,
			DATE_ADD(end_date, INTERVAL 1 DAY) as bl_release_date
		FROM dec_blacklist bl
		WHERE bl.bl_idx = #{bl_idx}
		AND DATE_FORMAT(NOW(), '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(end_date, INTERVAL 1 DAY), '%Y-%m-%d')
	]]>
	</select>
	
	<select id="selectCommunityBlackListUsersDaily" resultType="communityBlackList">
	<![CDATA[
		SELECT t.*
		FROM (
			SELECT bl_idx,
				comm_idx,
				(SELECT comm_name FROM dec_community c WHERE c.comm_idx = cbl.comm_idx) as comm_name,
				user_idx,
				(SELECT nick_name FROM dec_user u WHERE u.user_idx = cbl.user_idx) as user_nick,
				bl_comm_cont,
				bl_comm_scope,
				start_date,
				end_date,
				DATE_FORMAT(DATE_ADD(end_date, INTERVAL 1 DAY), '%Y-%m-%d') as bl_release_date
			FROM dec_comm_blacklist cbl
		) t
	]]>
	</select>
	
	<select id="selectCommunityBlackListUserReleaseStatusCheck" parameterType="communityBlackList" resultType="communityBlackList">
	<![CDATA[
		SELECT bl_idx,
			comm_idx,
			(SELECT comm_name FROM dec_community c WHERE c.comm_idx = cbl.comm_idx) as comm_name,
			user_idx,
			(SELECT nick_name FROM dec_user u WHERE u.user_idx = cbl.user_idx) as user_nick,
			bl_comm_cont,
			bl_comm_scope,
			start_date,
			end_date,
			DATE_ADD(end_date, INTERVAL 1 DAY) as bl_release_date
		FROM dec_comm_blacklist cbl
		WHERE cbl.bl_idx = #{bl_idx}
		AND DATE_FORMAT(NOW(), '%Y-%m-%d') >= DATE_FORMAT(DATE_ADD(end_date, INTERVAL 1 DAY), '%Y-%m-%d')
	]]>
	</select>
	
	
	
	
	
</mapper>
